{"ast":null,"code":"const defaultState = {\n  count: 10\n};\nexport const Burger = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LIKES\":\n      return {\n        ...state,\n        count: state.count + action.payload\n      };\n    case \"DISLIKES\":\n      return {\n        ...state,\n        count: state.count - action.payload\n      };\n    default:\n      return state;\n  }\n};\n_c = Burger;\nvar _c;\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"names":["defaultState","count","Burger","state","arguments","length","undefined","action","type","payload","_c","$RefreshReg$"],"sources":["/Users/ilas/Desktop/Project/store/src/store/Burger.js"],"sourcesContent":["const defaultState = {\n    count: 10,\n  }\n\nexport  const Burger = (state = defaultState, action) => {\n    switch(action.type){\n      case \"LIKES\":\n        return {...state, count: state.count + action.payload}\n      case \"DISLIKES\":\n        return {...state, count: state.count - action.payload}\n      default:\n        return state;\n    }\n  }\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE;AACT,CAAC;AAEH,OAAQ,MAAMC,MAAM,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAOC,MAAM,CAACC,IAAI;IAChB,KAAK,OAAO;MACV,OAAO;QAAC,GAAGL,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGM,MAAM,CAACE;MAAO,CAAC;IACxD,KAAK,UAAU;MACb,OAAO;QAAC,GAAGN,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGM,MAAM,CAACE;MAAO,CAAC;IACxD;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAAAO,EAAA,GATWR,MAAM;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}